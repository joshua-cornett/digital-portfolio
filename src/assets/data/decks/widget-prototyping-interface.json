{
  "id": "deck-widget-prototyping-v2",
  "title": "Widget Prototyping Interface",
  "sections": [
    {
      "id": "chapter-1",
      "title": "Mission Context",
      "slides": [
        {
          "id": "wpi-01",
          "label": "Widget Overload",
          "type": "narrative",
          "base": {
            "heading": "Widget Overload",
            "body": "As our widget demand scaled into the thousands, I became the sole developer responsible for maintaining and creating bespoke sponsored content widgets across a vast publisher network.",
            "readings": {
              "A": {
                "label": "Scale",
                "content": ["Thousands of widgets", "20/day at peak"]
              },
              "B": {
                "label": "Constraints",
                "content": ["Proprietary editors", "Manual workflows"]
              },
              "C": {
                "label": "Workload Shift",
                "content": ["Lead dev phased out", "No replacements"]
              },
              "D": {
                "label": "SLA",
                "content": ["24-hour turnaround", "Unbroken delivery"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "Meeting deadlines wasn't optional\u2014without intervention, burnout or failure was inevitable."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Custom work per publisher required per-widget solutions"]
                },
                "B": {
                  "add": ["No live preview, no HTML/CSS templates"]
                },
                "C": {
                  "add": ["Responsibility drifted to me without formal transition"]
                },
                "D": {
                  "add": ["Widgets were a key monetization surface for Static Media"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-2",
      "title": "Early Insight & Tradeoffs",
      "slides": [
        {
          "id": "wpi-02",
          "label": "The Template Trap",
          "type": "narrative",
          "base": {
            "heading": "The Template Trap",
            "body": "Basic templates were no longer enough. Widgets required constant customization, but our proprietary editor offered no support for componentization or iteration.",
            "readings": {
              "A": {
                "label": "Template Limitations",
                "content": ["Static HTML only", "No dynamic layout support"]
              },
              "B": {
                "label": "Editor Issues",
                "content": ["No live preview", "No component reuse"]
              },
              "C": {
                "label": "Developer Bottleneck",
                "content": ["Manual edits for every change"]
              },
              "D": {
                "label": "Organizational Inertia",
                "content": ["No appetite for tool migration"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "This pushed me to quietly invest in tooling for myself. Scaling required systemization, not shortcuts."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Templates didn\u2019t support responsive logic or dynamic styling"]
                },
                "B": {
                  "add": ["Couldn\u2019t safely preview accessibility or layout issues"]
                },
                "C": {
                  "add": ["No JS, no conditionals\u2014every fix was brute force"]
                },
                "D": {
                  "add": ["Tooling outside the system had to be invisible to be accepted"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-3",
      "title": "System Design & MVP",
      "slides": [
        {
          "id": "wpi-03",
          "label": "From UI to Markup",
          "type": "narrative",
          "base": {
            "heading": "From UI to Markup",
            "body": "Originally built in React with plain JavaScript, the tool was incrementally converted to TypeScript to ensure scalability, maintainability, and adherence to best practices. The interface allowed me to visually configure widgets using reusable components, then export raw HTML/CSS into Static Media's proprietary editor format.",
            "readings": {
              "A": {
                "label": "Stack",
                "content": ["React + Vite", "Zustand for state", "Gradual TypeScript migration"]
              },
              "B": {
                "label": "Component System",
                "content": ["Configurable props", "Accessibility baked in"]
              },
              "C": {
                "label": "Live Preview",
                "content": ["Mobile + Desktop modes", "ARIA & responsive rules tested"]
              },
              "D": {
                "label": "Output",
                "content": ["Raw HTML/CSS", "Fully editor-compatible"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "By using React to simulate the output environment, I could iterate with near-zero latency and never break the proprietary system.",
                  "Migrating to TypeScript was a strategic move to future-proof the tool and keep my skills sharp in real-world production use."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Vite hot module reload accelerated my flow"]
                },
                "B": {
                  "add": ["Each component had fallback content and alt tags"]
                },
                "C": {
                  "add": ["Preview toggled breakpoints and widget states"]
                },
                "D": {
                  "add": ["One-click copy-paste for pasting into live editor"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-4",
      "title": "Validation & Feedback Loops",
      "slides": [
        {
          "id": "wpi-04",
          "label": "Self-Correcting System",
          "type": "narrative",
          "base": {
            "heading": "Self-Correcting System",
            "body": "By linking my component config system to real CTR data via A/B testing, I created a feedback loop that helped the tool recommend optimal variants automatically.",
            "readings": {
              "A": {
                "label": "Performance Metric",
                "content": ["CTR (Click-Through-Rate)"]
              },
              "B": {
                "label": "Testing Method",
                "content": ["50/50 render split", "Strategic UI deltas"]
              },
              "C": {
                "label": "Feedback Loop",
                "content": ["Promote high-performing defaults"]
              },
              "D": {
                "label": "Database",
                "content": ["Locally persisted JSON or SQLite", "Linked to library index"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "It was no longer just a tool\u2014it became a system that learned with me and improved delivery and outcomes."
                ]
              },
              "readings": {
                "A": {
                  "add": ["CTR = clicks / impressions"]
                },
                "B": {
                  "add": ["No backend needed\u2014JS-based toggling for A/B logic"]
                },
                "C": {
                  "add": ["High performers moved to top of dropdowns"]
                },
                "D": {
                  "add": ["Historical data shaped smarter defaults"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-5",
      "title": "Tradeoffs & Constraints",
      "slides": [
        {
          "id": "wpi-05",
          "label": "Invisible Power",
          "type": "narrative",
          "base": {
            "heading": "Invisible Power",
            "body": "Because it was an internal tool only I used, no one asked how I hit my deadlines. I saved enormous time but created no visibility\u2014good for autonomy, bad for succession.",
            "readings": {
              "A": {
                "label": "Solo Use",
                "content": ["No one else needed training", "No one knew it existed"]
              },
              "B": {
                "label": "Missing Docs",
                "content": ["No onboarding guide", "CLI only for backup"]
              },
              "C": {
                "label": "Autonomy vs Visibility",
                "content": ["High output, low awareness"]
              },
              "D": {
                "label": "Lesson",
                "content": ["Internal success still needs storytelling"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "I built a system that let me do the work of a small team\u2014but in hiding its brilliance, I limited its lifespan."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Solo systems die without context sharing"]
                },
                "B": {
                  "add": ["No one else could pick up where I left off"]
                },
                "C": {
                  "add": ["Visibility might\u2019ve saved the tool post-layoff"]
                },
                "D": {
                  "add": ["Success needs evangelism to outlive its creator"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-6",
      "title": "Impact & Evolution",
      "slides": [
        {
          "id": "wpi-06",
          "label": "Lasting Impact",
          "type": "narrative",
          "base": {
            "heading": "Lasting Impact",
            "body": "WPI boosted my throughput by 50%, improved load times by 30%, and increased CTR by 20%\u2014all while keeping pace with aggressive SLAs for thousands of widgets.",
            "readings": {
              "A": {
                "label": "Performance Wins",
                "content": ["30% faster loads", "20% more clicks"]
              },
              "B": {
                "label": "Efficiency Gains",
                "content": ["50% more output", "Sustained 24-hour SLA"]
              },
              "C": {
                "label": "Tech Longevity",
                "content": ["Tool used for 2 years", "Unmaintained post-layoff"]
              },
              "D": {
                "label": "Handoff",
                "content": ["Laptop wiped per policy", "No formal transfer"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "Its legacy lives in the lessons it taught me: build for others, even when you\u2019re the only one using it."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Performance was measured live across campaigns"]
                },
                "B": {
                  "add": ["Never missed a deadline"]
                },
                "C": {
                  "add": ["Tool's design held stable for over 1000 widgets"]
                },
                "D": {
                  "add": ["A great tool without transition is a short-lived one"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "chapter-7",
      "title": "Wrap & Invite",
      "slides": [
        {
          "id": "wpi-07",
          "label": "What This Taught Me",
          "type": "narrative",
          "base": {
            "heading": "What This Taught Me About Tools",
            "body": "A tool is successful not when it works for one developer, but when it scales, evolves, and inspires others. WPI taught me to code with users in mind\u2014even when the user is just me.",
            "readings": {
              "A": {
                "label": "Autonomy",
                "content": ["Built solo", "Used exclusively in production"]
              },
              "B": {
                "label": "Vision",
                "content": ["Planned for scale", "Built for speed"]
              },
              "C": {
                "label": "Lesson",
                "content": ["Tell your tool\u2019s story before it\u2019s too late"]
              },
              "D": {
                "label": "Open Floor",
                "content": ["What else would you like to know?"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "WPI changed how I think about building internal systems\u2014for speed, for empathy, for the long run."
                ]
              },
              "readings": {
                "A": {
                  "add": ["Internal tooling is real engineering"]
                },
                "B": {
                  "add": ["Even self-facing tools need UX"]
                },
                "C": {
                  "add": ["Scaling yourself is a valid form of scale"]
                },
                "D": {
                  "add": ["Curious what part you'd want to dig into deeper?"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
