{
  "id": "deck-alpha",
  "title": "Technical Showcase",
  "sections": [
    {
      "id": "components",
      "title": "Component Library",
      "slides": [
        {
          "id": "alpha-01",
          "label": "UI Components",
          "type": "narrative",
          "base": {
            "heading": "Reusable Components",
            "body": "A showcase of custom React components built with accessibility, performance, and reusability in mind.",
            "readings": {
              "A": {
                "label": "Panel System",
                "content": [
                  "Grid-based panel layout",
                  "Dynamic content loading",
                  "Responsive behavior"
                ]
              },
              "B": {
                "label": "Navigation",
                "content": [
                  "GalaGUI radial selector",
                  "Keyboard navigation",
                  "Touch and mouse support"
                ]
              },
              "C": {
                "label": "Animations",
                "content": [
                  "CSS transitions and transforms",
                  "Performance optimizations",
                  "Reduced motion support"
                ]
              },
              "D": {
                "label": "Accessibility",
                "content": ["ARIA attributes", "Keyboard shortcuts", "Screen reader support"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "Each component is built with modularity and reusability as core principles."
                ]
              },
              "readings": {
                "A": { "add": ["Panels adapt to content while maintaining layout integrity."] },
                "B": { "add": ["Navigation works seamlessly across devices and input methods."] },
                "C": { "add": ["Animations enhance UX without compromising performance."] },
                "D": { "add": ["Accessibility features are built-in, not bolted on."] }
              }
            }
          ]
        },
        {
          "id": "alpha-02",
          "label": "State Management",
          "type": "narrative",
          "base": {
            "heading": "Zustand Store",
            "body": "Demonstration of efficient state management using Zustand, with a focus on performance and developer experience.",
            "readings": {
              "A": {
                "label": "Store Structure",
                "content": ["Modular store design", "Type-safe actions", "State persistence"]
              },
              "B": {
                "label": "Performance",
                "content": ["Selective re-rendering", "Memoization strategies", "State updates"]
              },
              "C": {
                "label": "Middleware",
                "content": ["Custom middleware", "DevTools integration", "State logging"]
              },
              "D": {
                "label": "Testing",
                "content": ["Store unit tests", "Integration testing", "Mock strategies"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": ["State management is optimized for both performance and maintainability."]
              },
              "readings": {
                "A": { "add": ["Store is organized for clarity and scalability."] },
                "B": { "add": ["Performance optimizations prevent unnecessary re-renders."] },
                "C": { "add": ["Middleware provides powerful extension points."] },
                "D": { "add": ["Testing ensures reliable state management."] }
              }
            }
          ]
        }
      ]
    },
    {
      "id": "features",
      "title": "Key Features",
      "slides": [
        {
          "id": "alpha-03",
          "label": "3D Navigation",
          "type": "narrative",
          "base": {
            "heading": "GalaGUI System",
            "body": "A deep dive into the 3D navigation system, showcasing Three.js integration and spatial interaction.",
            "readings": {
              "A": {
                "label": "Three.js Integration",
                "content": [
                  "Scene setup and management",
                  "Camera controls",
                  "Performance optimization"
                ]
              },
              "B": {
                "label": "Node System",
                "content": ["Fibonacci sphere algorithm", "Node interaction", "Selection feedback"]
              },
              "C": {
                "label": "Input Handling",
                "content": ["Mouse and touch events", "Keyboard navigation", "Gesture support"]
              },
              "D": {
                "label": "Visual Effects",
                "content": ["Glow and hover effects", "Transition animations", "Particle systems"]
              }
            }
          },
          "steps": [
            {
              "body": {
                "add": [
                  "The 3D navigation system combines technical innovation with intuitive interaction."
                ]
              },
              "readings": {
                "A": { "add": ["Three.js is used efficiently for smooth performance."] },
                "B": { "add": ["Nodes are distributed for optimal interaction."] },
                "C": { "add": ["Input handling works across all devices."] },
                "D": { "add": ["Visual effects enhance usability without distraction."] }
              }
            }
          ]
        }
      ]
    }
  ]
}
